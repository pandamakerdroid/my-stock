# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '54b0296c-3966-4fd1-9b27-f7bfd0d866d5'

  # Web app name
  webAppName: 'my-stock-backend'

  # Static app name
  staticAppName: 'my-stock-frontend'
  
  # Environment name
  environmentName: 'dev'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Node Version
  nodeVersion: '18.X'
  
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build_Frontend
    displayName: Build Frontend
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Install Node.js'

    - script: |
        cd frontend
        npm install --force
        npm run build --if-present
        #npm run test --if-present #no tests for now, skip
      displayName: 'npm install, build and test react frontend'

    - task: ArchiveFiles@2
      displayName: 'Archive Frontend'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/frontend/build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-frontend.zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-frontend.zip
      artifact: drop1

  - job: Build_Backend
    displayName: Build Frontend
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Install Node.js'

    - script: |
        cd backend
        npm install
        #npm run test --if-present
      displayName: 'npm install, build and test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/backend'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-backend.zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-backend.zip
      artifact: drop2

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy_Frontend
    displayName: Deploy Frontend
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureStaticWebApp@0
            displayName: 'Deploy Frontend to Azure Static Web App:'
            inputs:
              workingDirectory: '$(System.DefaultWorkingDirectory)/frontend/'
              app_build_command: |
                npm install
                npm run build --if-present
              output_location: 'build'
              verbose: true
              skip_api_build: true
              azure_static_web_apps_api_token: $(deployment_token)
              production_branch: 'master'
              
  - deployment: Deploy_Backend
    displayName: Deploy Backend
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: '
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|''$(nodeVersion)'
              package: $(Pipeline.Workspace)/drop2/$(Build.BuildId)-backend.zip
              startUpCommand: 'npm run start'